Welcome to PHPBTTracker+!

Ironically enough, the original version of phpbttracker was DeHackEd's
first PHP project, and it is also my first real PHP project.

Highlights:
  + Provides the same functionality as the offical tracker
  + Runs using MySQL as a database backend
  + Built-in statistics collection with several sample summary scripts
  + Customization is reasonably easy to implement
  + Full administration interface
  + Multi user/group if needed

Pitfalls:
  - PHP has some limitations and weird quirks so this tracker is not optimal.
  - There are more than likely a few lingering bugs.

USAGE
-----

  There are a few things you need to do to use this tracker. First of all, you
  need to create a torrent. Secondly, you need to add it to the tracker through
  the administration interface. Thirdly, if the tracker is not set to upload
  torrents automatically, it has to be manually placed on the webserver, and
  the torrent edited to point to it. The third step is self-explanatory and
  will not be explained in detail in this document. The first two steps are
  explained below.

  1. Create a torrent
  -------------------

  Create your torrent files as usual. Specify the url to 
  tracker.php (or its new name if you renamed it) as the announce
  URL.
 
  Login to the administrative interface and check the add torrent hyperlink.
  Specify the torrent and optional details. If 'Fill in fields from torrent
  data file' is checked, the filename and size will be grabbed automatically
  and added.

  2. Administration Interface
  ---------------------------

  The administration interface is the most prevalent feature in this tracker
  release. It has been broken up as follows:
    a. Add a torrent
    b. Delete a torrent
    c. Edit a torrent
    d. Retire a torrent
    e. Revive a torrent
    f. Delete a retired torrent
    g. Run a database consistency check
    h. Add a user
    i. Edit a user
    j. Delete a user
    k. Add an IP ban
    l. Remove an IP ban

  *NOTE: Most pages allow you to sort by column, if there is a hyperlink in the
       column header. This may help locating things in the list.

  a. Add a torrent.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'Add new torrent' hyperlink under Administrative 
         functions.
    iii. Click the Browse button, choose the torrent to add. If needed, fill
         out the optional fields and click 'Create'.
    iv.  Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  b. Delete a torrent.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Scroll through the list, find the torrent and check the checkbox to
         the far right of the name. (Rightmost column.)
    iii. Scroll to the bottom of the list, and click the 'Delete selected
         torrents' button.
    iv.  Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  c. Edit a torrent.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Scroll through the list, find the torrent and click the 'Edit'
         hyperlink to right of the name.
    iii. Make your changes, and click the 'Apply' button at the bottom of
         the page.
    iv.  Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  d. Retire a torrent.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Scroll through the list, find the torrent and click the 'Retire'
         hyperlink to right of the name.
    iii. Ensure it is the correct torrent, and click the 'Retire torrent' 
         button at the bottom of the page.
    iv.  Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  e. Revive a torrent.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'View/delete/revive retired torrents' link under
         Administrative functions.
    iii. Scroll through the list, find the torrent and click the 'Revive'
	      hyperlink to right of the name.
    iv.  Ensure that it is the correct torrent, add optional information
         as required, and click the 'Revive torrent' button at the
         bottom of the page.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  f. Delete a retired torrent.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'View/delete/revive retired torrents' link under
         Administrative functions.
    iii. Scroll through the list, find the torrent and click the checkbox
         to the far right of the name. (Rightmost column)
    iv.  Scroll to the bottom of the page and click the 'Delete' button.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  g. Run a database consistency check.
    There are two ways to do this:

    FIRST METHOD (assuming you are logged in to the Administration interface)
    -------------------------------------------------------------------------
    i. Click the 'Database consistency check' hyperlink under
       Administration functions.

    SECOND METHOD (don't need to be logged in to the Admin interface)
    -----------------------------------------------------------------
    i. Navigate to administration/bta_consistency.php with your web browser.

  h. Add a user.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'User Management' link under Administrative functions.
    iii. Click the 'Add new user' link.
    iv.  Fill out the details and press the 'Add User' button.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  i. Edit a user.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'User Management' link under Administrative functions.
    iii. Find the user in the list and click the 'Edit' hyperlink.
    iv.  Change the details and press the 'Apply changes' button.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  j. Delete a user.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'User Management' link under Administrative functions.
    iii. Find the user and check the Delete checkbox.
    iv.  Press the 'Delete selected users' button.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  k. Add an IP ban.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'IP Banning' link under Administrative functions.
    iii. Enter the IP address, reason, and length of ban.
    iv.  Press the 'Process ban requests' button.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.

  l. Remove an IP ban.
    i.   Navigate to administration/index.php in your web browser, and login.
    ii.  Click the 'IP Banning' link under Administrative functions.
    iii. Find the IP address in the list and check the checkbox in the 'Remove
         Ban' column. NOTE: This this is string sorted; it isn't numerically
         sorted.
    iv.  Press the 'Process ban requests' button.
    v.   Click the 'Log off administration interface' hyperlink under
         Administrative functions when done.


DATABASE LAYOUT
---------------

Most of the database layout is preserved with the exception of a few table
structure changes of the existing tables. Several tables were also added that
did not exist in the phpbttracker version.

Here is a listing of some of the tables and fields. Only the major tables have
the field names commented; it isn't likely you will need to use the uncommented
ones (for example, the timestamps table.)

TABLE Summary 
	Description: Summary statistics displayed on index pages.

	info_hash            - The 40 character hex representation of the file. It is
	                       unique to every torrent.

	dlbytes              - The approximate sum of all the bytes downloaded by 
	                       everyone.

	seeds                - The number of connected users who have the whole file 
	                       and are uploading.

	leechers             - The number of connected users who are still downloading
	                       the file.

	finished             - The number of users who have fully downloaded the file. 
	                       Use this as a measure of how many people have the file.

	lastcycle            - Used by the trash collector to decide if it should try 
	                       to purge users who have timed out.

	lastSpeedCycle       - Last time the speed check was run.

	lastAvgCycle         - Last time the average torrent progress check was run.

	speed                - Approximate speed of the torrent.

	hide_torrent         - 'Y' if torrent is hidden from the index page.

	avgdone              - Average percentage done on the torrent (approximate).

	external_torrent     - 'Y' if torrent doesn't "belong" to this tracker.

	ext_no_scrape_update - 'Y' if torrent is external and doesn't support /scrape 
	                       for updating.


TABLE Namemap
   Description: This is used primarily by the index script.
                Note that all fields (except hash) are optional and may be "" 
                (but not NULL, those are annoying). A torrent need not have 
                an entry here at all.

	info_hash         - The file's unique 40 character hash.

	filename          - The file that this torrent represents.

	url               - A link to where the .torrent file may be grabbed.

	mirrorurl         - An alternate link to where the torrent can be retrieved.

	info              - A short text description added after the filename.

	size              - Size of the torrent.

	crc32             - CRC information, if any was added.

	DateAdded         - Date torrent added to the tracker.

	category          - Category torrent belongs to.

	sfvlink           - A link to a SFV file, if needed.

	md5link           - A link to a MD5 file, if needed.

	infolink          - A link to another page with more information about
	                    the torrent.

	DateToRemoveURL   - Date when the torrents URL gets removed from the index
	                    page. The stats remain with no link to download the
	                    torrent.

	DateToHideTorrent - Date when the torrent gets hidden from the index page.
	                    NOTE: Torrent stays active.

	addedby           - Which user added this torrent to the tracker.


TABLE x<insert info_hash here>
   Description: This is torrent specific and contains all the peers connected
                to the specified torrent.

	peer_id       - A 40 character hash that is unique to each client.

	bytes         - The number of bytes this peer still needs to download to have 
	                the complete file. Seeders have this set to 0.

	ip            - The client's IP address

	port          - The port the client is listening on (usually 6881)

	status        - Either "seeder" or "leecher" (see above). It's a bit redundant 
	                right now since "bytes==0" is the same as a seeder.

	lastupdate    - Unix time of when the client last reported in.

	natuser       - 'Y' if this user is behind a NAT.

	uploaded      - Amount IP has contributed to the torrent.

	clientversion - Version of the client that user is using.

TABLE y<insert info_hash here>
   Description: This is torrent specific and contains all the peers connected
                to the specified torrent. (This is the peer caching table.)


TABLE trk_ext
   Description: Houses any external torrents that need to be scanned and 
                updated.

	info_hash   - This is the info_hash value that will be updated.

	scrape_url  - URL used to get scrape information.

	last_update - Unix timestamp of last contact with tracker.


TABLE ipbans
   Description: Stores any IP bans.

	ban_id         - Unique ID of ban.

	ip             - IP that was banned.

	iplong         - Numeric representation of IP address.

	bandate        - When the IP was banned.

	reason         - Why the ban happened.

	autoban        - Set to 'Y' if banned from the client filtering module.

	banlength      - Length the ban was originally set for.

	banexpiry      - When the ban automatically expires, if not permanent.

	banautoexpires - Set to 'Y' when ban will be lifted automatically.


TABLE retired
   Description: Stores retired torrents.

	info_hash   - The info hash that was retired.

	filename    - The filename that was retired.

	size        - The size of the torrent.

	crc32       - The CRC value, if one was entered.

	category    - The category torrent originally belonged to.

	completed   - Total downloads over the life of the torrent.

	transferred - Total amount transferred over the life of the torrent.

	dateadded   - Date torrent was originally added to tracker.

	dateretired - Date torrent was retired.


TABLE adminusers
   Description: Table used for other users login information.

	username         - The users username.

	password         - The users password (encrypted).

	category         - The category user is locked to.

	comment          - A comment that is displayed on the main screen when they
	                   log in.

	enabled          - Set to 'Y' to enable account; 'N' to disable.

	disable_reason   - Text string shown to user when attempting to login
	                   using a disabled account.

	perm_add         - Set to 'Y' if user is allowed to add torrents.

	perm_addext      - Set to 'Y' if user is allowed to add external torrents.

	perm_mirror      - Set to 'Y' to allow users to add torrents that specify
	                   the current tracker as a backup tracker.

	perm_edit        - Set to 'Y' if user is allowed to edit torrents.

	perm_delete      - Set to 'Y' if user is allowed to delete torrents.

	perm_retire      - Set to 'Y' if user is allowed to retire torrents.

	perm_unhide      - Set to 'Y' if user is allowed to unhide torrents.

	perm_peers       - Set to 'Y' if user is allowed to view peers on torrents.

	perm_viewconf    - Set to 'Y' if user is allowed to view tracker 
	                   configuration.

	perm_retiredmgmt - Set to 'Y' if user is allowed to manage their own retired
	                   retired torrents.

	perm_ipban       - Set to 'Y' if user is allowed to add/remove IP bans.

	perm_usermgmt    - Set to 'Y' if user is allowed to add/edit/remove users.

TABLE timestamps
   Description: Used to calculate speed and amount downloaded in a sliding-
                window fashion.

CREDITS
-------

People besides me (danomac) who deserve credit.

DeHackEd    - Author of the original PHPBTTracker.
Redbat      - First official beta-tester for PHPBTTracker+.
Bram Cohen  - Author of BT, and really patient guy.
KktoMx      - Figured out the "stripslashes" problem in phpbttracker.
bideomex    - Found the dumb thing that was done with stripslashes in 
              phpbttracker.
